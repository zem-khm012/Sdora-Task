{
  "swagger": "2.0",

  "info": {
      "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
      "version": "1.0.6",
      "title": "Swagger Petstore",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
          "email": "apiteam@swagger.io"
      },
      "license": {
          "name": "Apache 2.0",
          "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
  },

  "host": "localhost:3000",
  "basePath": "/api",
  
  "paths": {
      "/moods-details": {
          "get": {
              "description": "Returns a greeting message.",
              "produces": [
                  "application/json"
              ],
              "responses": {
                "200": {
                    "description": "successful operation",
                    "schema": {
                        "type": "array",
                        "items": {
                        
                        }
                    }
                },
                "400": {
                    "description": "Invalid status value"
                }
            }
          }
      },
      "/user-details/{user_id}": {
        "get": {
          "summary": "Get user details",
          "description": "Returns the details of a specific user.",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "description": "ID of the user to retrieve",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "User details retrieved successfully.",
              "schema": {
                "$ref": "#/definitions/UserDetails"
              }
            },
            "404": {
              "description": "User not found."
            }
          }
        }
      },
      "/add-user": {
        "post": {
          "summary": "Add User API",
        "produces": [
            "application/json",
            "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be created",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "mobile": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "birthdate": {
                  "type": "string",
                  "format": "date"
                },
                "gender": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                }
              }
            }
          }
        ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "boolean",
                        "description": "A boolean value indicating whether the operation was successful"
                      },
                      "message": {
                        "type": "string",
                        "description": "A message indicating the outcome of the operation"
                      }
                    }
                  },
                  "example": {
                    "result": true,
                    "message": "User Added sucessfully"
                  }
                }
              }
            }
          }
          
        }
      }, "/user-mood-details/{user_id}": {
        "get": {
          "summary": "get user mood details",
          "description": "Returns the details of user mood.",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "description": "ID of the user to retrieve",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "User details retrieved successfully.",
              "schema": {
                "$ref": "#/definitions/UserDetails"
              }
            },
            "404": {
              "description": "User not found."
            }
          }
        }
      },
      "/add-user-mood/{user_id}": {
        "post": {
          "summary": "Add user mood details",
          "description": "Returns the details of user mood.",
          "parameters": [
            {
              "name": "user_id",
              "in": "path",
              "description": "ID of the user to retrieve",
              "required": true,
              "type": "string"
            },{
              "in": "body",
              "name": "body",
              "description": "User object that needs to be created",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "emotion": {
                    "type": "string"
                  },
                  "feeling": {
                    "type": "array",
                    "items":{
                      "type":"string"
                    }
                  },
                  "reason": {
                    "type": "array",
                    "items":{
                      "type":"string"
                    }
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User details retrieved successfully.",
              "schema": {
                "$ref": "#/definitions/UserDetails"
              }
            },
            "404": {
              "description": "User not found."
            }
          }
        }
      }

    },
      "definitions": {
        "UserDetails": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of the user."
            },
            "name": {
              "type": "string",
              "description": "The name of the user."
            },
            "email": {
              "type": "string",
              "description": "The email address of the user."
            },
            "age": {
              "type": "integer",
              "description": "The age of the user."
            }
          }
        }
      }
      }
